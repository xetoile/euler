const Utils = require('./utils');
const description = `
/***********************/
/*     PROBLEM 012     */
/***********************/
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
`;

function job(target) {

	const countDivisors = function (n) {
		// 1 and n are two obvious divisors of n
		// here we count only *half* of divisors, and x2 at the end
		// (perf boost: 875822ms vs. 713ms)
		let divisors = 1;
		for (let i = 2; i < n / i; i++) {
			if (n % i === 0) {
				divisors++;
			}
		}
		return divisors * 2;
	};

	let triangle = 0,
		divisors = 0;
	for (let i = 1; divisors <= target; i++) {
		triangle += i;
		divisors = countDivisors(triangle);
	}
	return triangle;

}

module.exports = {
	d: description,
	p: 500,
	f: job
}